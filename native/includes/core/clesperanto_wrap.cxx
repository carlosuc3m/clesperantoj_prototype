/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#ifndef __clesperanto_hpp
#define __clesperanto_hpp

#include "cleGPU.hpp"
#include "cleObject.hpp"

#include <type_traits>
#include <iostream>

namespace cle
{

class Clesperanto
{
private:
    std::shared_ptr<cle::GPU> m_gpu;

public:
    Clesperanto();
    ~Clesperanto() = default;

    template<class T =float>
    const cle::Object Create(const std::array<size_t,3>& ={1,1,1}, const std::string& ="buffer") const;
    template<class T =float>
    const cle::Object Push(const std::vector<T>& ={0}, const std::array<size_t,3>& ={1,1,1}, const std::string& ="buffer") const;
    template<class T =float>
    const std::vector<T> Pull(const cle::Object&) const;

    std::shared_ptr<GPU> Ressources();

    void AddImageAndScalar(Object&, Object&, float=0);
    void AddImagesWeighted(Object&, Object&, Object&, float=1, float=1);
    void AddImages(Object&, Object&, Object&);
    void SubtractImages(Object&, Object&, Object&);
    void DilateSphere(Object&, Object&);
    void ErodeSphere(Object&, Object&);
    void Equal(Object&, Object&, Object&);
    void EqualConstant(Object&, Object&, float=0);
    void GaussianBlur(Object&, Object&, float=1, float=1, float=0);
    void MeanBox(Object&, Object&, float=1, float=1, float=0);
    void MaximumBox(Object&, Object&, float=1, float=1, float=0);
    void MinimumBox(Object&, Object&, float=1, float=1, float=0);
    void Greater(Object&, Object&, Object&);
    void GreaterOrEqual(Object&, Object&, Object&);
    void GreaterConstant(Object&, Object&, float=0);
    void GreaterOrEqualConstant(Object&, Object&, float=0);
    void MaximumZProjection(Object&, Object&);
    void MaximumYProjection(Object&, Object&);
    void MaximumXProjection(Object&, Object&);
    void MaximumOfAllPixels(Object&, Object&);
    void MinimumZProjection(Object&, Object&);
    void MinimumYProjection(Object&, Object&);
    void MinimumXProjection(Object&, Object&);
    void MinimumOfAllPixels(Object&, Object&);
    void MeanSphere(Object&, Object&, int=1, int=1, int=0);
    void NonzeroMinimumBox(Object&, Object&, Object&);
    void NotEqual(Object&, Object&, Object&);
    void NotEqualConstant(Object&, Object&, float=0);
    void Absolute(Object&, Object&);
    void Sobel(Object&, Object&);
    void Set(Object&, float=0);
    void SetNonzeroPixelsToPixelindex(Object&, Object&);
    void DifferenceOfGaussian(Object&, Object&, float=0, float=0, float=0, float=1, float=1, float=0);
    void Smaller(Object&, Object&, Object&);
    void SmallerOrEqual(Object&, Object&, Object&);
    void SmallerConstant(Object&, Object&, float=0);
    void SmallerOrEqualConstant(Object&, Object&, float=0);
    void Copy(Object&, Object&);
    void DetectMaximaBox(Object&, Object&);
    void SumZProjection(Object&, Object&);
    void SumYProjection(Object&, Object&);
    void SumXProjection(Object&, Object&);
    void SumOfAllPixels(Object&, Object&);
    void ConnectedComponentLabellingBox(Object&, Object&);
    void ReplaceIntensity(Object&, Object&, float=0, float=0);
    void ReplaceIntensities(Object&, Object&, Object&);
    void SetColumn(Object&, int=0, float=0);
    void SumReductionX(Object&, Object&, int=0);
    void BlockEnumerate(Object&, Object&, Object&, int=0);  //! block enumarate fail when running with Image
    void FlagExistingLabels(Object&, Object&);
    void CloseIndexGapsInLabelMap(Object&, Object&, int=4096);
};

    template<class T>
    const cle::Object Clesperanto::Create(const std::array<size_t,3>& t_shape, const std::string& t_type) const
    {
        return this->m_gpu->Create<T>(t_shape, t_type);
    }

    template<class T>
    const cle::Object Clesperanto::Push(const std::vector<T>& t_array, const std::array<size_t,3>& t_shape, const std::string& t_type) const
    {
        return this->m_gpu->Push<T>(t_array, t_shape, t_type);
    }

    template<class T>
    const std::vector<T> Clesperanto::Pull(const cle::Object& t_object) const
    {
        return this->m_gpu->Pull<T>(t_object);
    }

} // namespace cle

#endif //__clesperanto_hpp


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_clesperantoJNI_new_1Clesperanto(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  cle::Clesperanto *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (cle::Clesperanto *)new cle::Clesperanto();
  *(cle::Clesperanto **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_delete_1Clesperanto(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_clesperantoJNI_Clesperanto_1Ressources(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  std::shared_ptr< GPU > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  result = (arg1)->Ressources();
  *(std::shared_ptr< GPU > **)&jresult = new std::shared_ptr< GPU >((const std::shared_ptr< GPU > &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1AddImageAndScalar_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->AddImageAndScalar(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1AddImageAndScalar_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->AddImageAndScalar(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1AddImagesWeighted_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jfloat jarg5, jfloat jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  float arg5 ;
  float arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  (arg1)->AddImagesWeighted(*arg2,*arg3,*arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1AddImagesWeighted_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg5 = (float)jarg5; 
  (arg1)->AddImagesWeighted(*arg2,*arg3,*arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1AddImagesWeighted_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->AddImagesWeighted(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1AddImages(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->AddImages(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SubtractImages(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SubtractImages(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DilateSphere(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->DilateSphere(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1ErodeSphere(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->ErodeSphere(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Equal(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1EqualConstant_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->EqualConstant(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1EqualConstant_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->EqualConstant(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GaussianBlur_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  (arg1)->GaussianBlur(*arg2,*arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GaussianBlur_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->GaussianBlur(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GaussianBlur_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->GaussianBlur(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GaussianBlur_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->GaussianBlur(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanBox_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  (arg1)->MeanBox(*arg2,*arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanBox_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->MeanBox(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanBox_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->MeanBox(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanBox_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MeanBox(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumBox_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  (arg1)->MaximumBox(*arg2,*arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumBox_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->MaximumBox(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumBox_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->MaximumBox(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumBox_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MaximumBox(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumBox_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  (arg1)->MinimumBox(*arg2,*arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumBox_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->MinimumBox(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumBox_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->MinimumBox(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumBox_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MinimumBox(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Greater(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Greater(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GreaterOrEqual(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->GreaterOrEqual(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GreaterConstant_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->GreaterConstant(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GreaterConstant_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->GreaterConstant(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GreaterOrEqualConstant_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->GreaterOrEqualConstant(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1GreaterOrEqualConstant_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->GreaterOrEqualConstant(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumZProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MaximumZProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumYProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MaximumYProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumXProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MaximumXProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MaximumOfAllPixels(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MaximumOfAllPixels(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumZProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MinimumZProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumYProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MinimumYProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumXProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MinimumXProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MinimumOfAllPixels(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MinimumOfAllPixels(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanSphere_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  (arg1)->MeanSphere(*arg2,*arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanSphere_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  int arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  (arg1)->MeanSphere(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanSphere_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (int)jarg4; 
  (arg1)->MeanSphere(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1MeanSphere_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->MeanSphere(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1NonzeroMinimumBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->NonzeroMinimumBox(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1NotEqual(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->NotEqual(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1NotEqualConstant_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->NotEqualConstant(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1NotEqualConstant_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->NotEqualConstant(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Absolute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Absolute(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Sobel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Sobel(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Set_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jfloat jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  float arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = (float)jarg3; 
  (arg1)->Set(*arg2,arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Set_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Set(*arg2);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SetNonzeroPixelsToPixelindex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SetNonzeroPixelsToPixelindex(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7, jfloat jarg8, jfloat jarg9) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = (float)jarg8; 
  arg9 = (float)jarg9; 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3,arg4,arg5,arg6,arg7,arg8,arg9);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7, jfloat jarg8) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  arg8 = (float)jarg8; 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3,arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6, jfloat jarg7) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  arg7 = (float)jarg7; 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5, jfloat jarg6) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  arg6 = (float)jarg6; 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_15(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DifferenceOfGaussian_1_1SWIG_16(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->DifferenceOfGaussian(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Smaller(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Smaller(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SmallerOrEqual(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SmallerOrEqual(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SmallerConstant_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->SmallerConstant(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SmallerConstant_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SmallerConstant(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SmallerOrEqualConstant_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->SmallerOrEqualConstant(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SmallerOrEqualConstant_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SmallerOrEqualConstant(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1Copy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->Copy(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1DetectMaximaBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->DetectMaximaBox(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SumZProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SumZProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SumYProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SumYProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SumXProjection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SumXProjection(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SumOfAllPixels(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SumOfAllPixels(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1ConnectedComponentLabellingBox(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->ConnectedComponentLabellingBox(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1ReplaceIntensity_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4, jfloat jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  float arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  arg5 = (float)jarg5; 
  (arg1)->ReplaceIntensity(*arg2,*arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1ReplaceIntensity_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (float)jarg4; 
  (arg1)->ReplaceIntensity(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1ReplaceIntensity_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->ReplaceIntensity(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1ReplaceIntensities(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->ReplaceIntensities(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SetColumn_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jfloat jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  int arg3 ;
  float arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = (int)jarg3; 
  arg4 = (float)jarg4; 
  (arg1)->SetColumn(*arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SetColumn_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = (int)jarg3; 
  (arg1)->SetColumn(*arg2,arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SetColumn_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SetColumn(*arg2);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SumReductionX_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (int)jarg4; 
  (arg1)->SumReductionX(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1SumReductionX_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->SumReductionX(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1BlockEnumerate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg5 = (int)jarg5; 
  (arg1)->BlockEnumerate(*arg2,*arg3,*arg4,arg5);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1BlockEnumerate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  Object *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = *(Object **)&jarg4;
  if (!arg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->BlockEnumerate(*arg2,*arg3,*arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1FlagExistingLabels(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->FlagExistingLabels(*arg2,*arg3);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1CloseIndexGapsInLabelMap_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg4 = (int)jarg4; 
  (arg1)->CloseIndexGapsInLabelMap(*arg2,*arg3,arg4);
}


SWIGEXPORT void JNICALL Java_clesperantoJNI_Clesperanto_1CloseIndexGapsInLabelMap_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  cle::Clesperanto *arg1 = (cle::Clesperanto *) 0 ;
  Object *arg2 = 0 ;
  Object *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(cle::Clesperanto **)&jarg1; 
  arg2 = *(Object **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  arg3 = *(Object **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Object & reference is null");
    return ;
  } 
  (arg1)->CloseIndexGapsInLabelMap(*arg2,*arg3);
}


#ifdef __cplusplus
}
#endif

